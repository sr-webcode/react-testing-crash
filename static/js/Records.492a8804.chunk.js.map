{"version":3,"file":"static/js/Records.492a8804.chunk.js","mappings":"mJA4BA,IA1BiB,SAACA,EAAKC,GACrB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,kBAAM,KACjBE,MAAMV,EAAKC,GACRU,MAAK,SAACC,GACL,IAAKA,EAAIC,GAAI,MAAMC,MAAM,yBACzB,OAAOF,EAAIG,UAEZJ,MAAK,SAACC,GAAD,OAASR,GAAQ,kBAAMQ,QAC5BI,OAAM,SAACC,GACNX,GAAS,kBAAMW,EAAIC,cAEpBC,SAAQ,kBAAMX,GAAW,kBAAM,UACjC,CAACR,IAEG,CACLG,KAAAA,EACAE,MAAAA,EACAE,QAAAA,K,gDCfJ,UAPgB,WACd,OAAiCa,EAAAA,EAAAA,GAAS,6CAA8C,IAAhFjB,EAAR,EAAQA,KAAMI,EAAd,EAAcA,QACd,OADA,EAAuBF,OACL,+DACdE,GAAgB,yCACb,8BAAGc,KAAKC,UAAUnB,EAAM,KAAM","sources":["hooks/useFetch/index.js","pages/Records/index.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useFetch = (url, options) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(() => true);\n    fetch(url, options)\n      .then((res) => {\n        if (!res.ok) throw Error('Failed to fetch data.');\n        return res.json();\n      })\n      .then((res) => setData(() => res))\n      .catch((err) => {\n        setError(() => err.message);\n      })\n      .finally(() => setLoading(() => false));\n  }, [url]);\n\n  return {\n    data,\n    error,\n    loading\n  };\n};\n\nexport default useFetch;\n","import useFetch from '@hooks/useFetch';\n\nconst Records = () => {\n  const { data, loading, error } = useFetch('https://jsonplaceholder.typicode.com/users', {});\n  if (error) return <div>Something went wrong ðŸ’€</div>;\n  if (loading) return <div>loading...</div>;\n  return <>{JSON.stringify(data, null, 2)}</>;\n};\n\nexport default Records;\n"],"names":["url","options","useState","data","setData","error","setError","loading","setLoading","useEffect","fetch","then","res","ok","Error","json","catch","err","message","finally","useFetch","JSON","stringify"],"sourceRoot":""}